'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.34209
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated. <- Lel. the tool that generates this is FuBar
'     Tool shit-ups fixed by Walkman100
' </auto-generated>
'------------------------------------------------------------------------------
Option Strict Off
Option Explicit On

Namespace My
    <Global.System.Runtime.CompilerServices.CompilerGeneratedAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("ICSharpCode.SettingsEditor.SettingsCodeGeneratorTool", "4.4.1.9729"), _
     Global.System.ComponentModel.EditorBrowsableAttribute(Global.System.ComponentModel.EditorBrowsableState.Advanced)> _
    Partial Friend NotInheritable Class MySettings
        Inherits Global.System.Configuration.ApplicationSettingsBase
        Private Shared defaultInstance As MySettings = CType(Global.System.Configuration.ApplicationSettingsBase.Synchronized(New MySettings()),MySettings)
        
        #Region "Support for My.Application.SaveMySettingsOnExit"
            #If _MyType = "WindowsForms" Then
                Private Shared addedHandler As Boolean
                Private Shared addedHandlerLockObject As New Object
                <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), Global.System.ComponentModel.EditorBrowsableAttribute(Global.System.ComponentModel.EditorBrowsableState.Advanced)> _
                Private Shared Sub AutoSaveSettings(ByVal sender As Global.System.Object, ByVal e As Global.System.EventArgs)
                    If My.Application.SaveMySettingsOnExit Then
                        My.Settings.Save()
                    End If
                End Sub
            #End If
        #End Region
        
        Public Shared ReadOnly Property [Default]() As MySettings
            Get
                #If _MyType = "WindowsForms" Then
                    If Not addedHandler Then
                        SyncLock addedHandlerLockObject
                            If Not addedHandler Then
                                AddHandler My.Application.Shutdown, AddressOf AutoSaveSettings
                                addedHandler = True
                            End If
                        End SyncLock
                    End If
                #End If
                Return defaultInstance
            End Get
        End Property
        
        <Global.System.Configuration.UserScopedSettingAttribute(), _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.Configuration.DefaultSettingValueAttribute("True")> _
        Public Property AddNewItemsToStart() As Boolean
            Get
                Return CType(Me("AddNewItemsToStart"),Boolean)
            End Get
            Set
                Me("AddNewItemsToStart") = value
            End Set
        End Property
        
        <Global.System.Configuration.UserScopedSettingAttribute(), _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.Configuration.DefaultSettingValueAttribute("False")> _
        Public Property AutoSort() As Boolean
            Get
                Return CType(Me("AutoSort"),Boolean)
            End Get
            Set
                Me("AutoSort") = value
            End Set
        End Property
        
        <Global.System.Configuration.UserScopedSettingAttribute(), _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.Configuration.DefaultSettingValueAttribute("")> _
        Public Property ContinuousStoragePath() As String
            Get
                Return CType(Me("ContinuousStoragePath"),String)
            End Get
            Set
                Me("ContinuousStoragePath") = value
            End Set
        End Property
        
        <Global.System.Configuration.UserScopedSettingAttribute(), _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.Configuration.DefaultSettingValueAttribute("28")> _
        Public Property MaxEntries() As Integer
            Get
                Return CType(Me("MaxEntries"),Integer)
            End Get
            Set
                Me("MaxEntries") = value
            End Set
        End Property
        
        <Global.System.Configuration.UserScopedSettingAttribute(), _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.Configuration.DefaultSettingValueAttribute("")> _
        Public Property PersistantStoragePath() As String
            Get
                Return CType(Me("PersistantStoragePath"),String)
            End Get
            Set
                Me("PersistantStoragePath") = value
            End Set
        End Property
    End Class
    
    <Global.Microsoft.VisualBasic.HideModuleNameAttribute(), _
     Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.Runtime.CompilerServices.CompilerGeneratedAttribute()> _
    Friend Module MySettingsProperty
        <Global.System.ComponentModel.Design.HelpKeywordAttribute("My.Settings")> _
        Friend ReadOnly Property Settings() As Global.ClipboardManager.My.MySettings
            Get
                Return Global.ClipboardManager.My.MySettings.Default
            End Get
        End Property
    End Module
End Namespace
